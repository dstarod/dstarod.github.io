<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Круг интересов</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Круг интересов</description>
    <generator>Hugo</generator>
    <language>ru-RU</language>
    <lastBuildDate>Mon, 30 Jun 2025 17:52:25 +0300</lastBuildDate>
    <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Превращаем заметки Obsidian в посты Hugo</title>
      <link>/posts/obsidian2hugo/</link>
      <pubDate>Mon, 30 Jun 2025 17:52:25 +0300</pubDate>
      <guid>/posts/obsidian2hugo/</guid>
      <description>&lt;p&gt;Когда решил вернуться к написанию постов в блог, решил перевести его на генерацию статических сайтов &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. А так как к тому моменту я успел полюбить &lt;a href=&#34;https://obsidian.md&#34;&gt;Obsidian&lt;/a&gt;, то стал решать, как бы так сделать, чтобы писать статьи в нем, а в Hugo транслировать с нужными модификациями. Готовые решения меня не устроили (то одно не так то другое не то), решил сделать что-то свое.&lt;/p&gt;&#xA;&lt;p&gt;Плагин для Obsidian не осилил (никогда не писал на TypeScript), поэтому с помощью ИИ накидал варианты на Python и Go. Скачать можно &lt;a href=&#34;https://github.com/dstarod/obsidian2hugo&#34;&gt;с моего GitHub&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Консольный ИИ-агент Gemini CLI</title>
      <link>/posts/gemini-cli-howto/</link>
      <pubDate>Sun, 29 Jun 2025 19:10:14 +0300</pubDate>
      <guid>/posts/gemini-cli-howto/</guid>
      <description>&lt;p&gt;Gemini CLI - консольный ИИ-агент от Google. Работает с моделью &lt;code&gt;gemini-2.5-pro&lt;/code&gt;. Позволяет делать бесплатно 1000 запросов в день и дает контекстное окно в миллион токенов. Умеет работать с файловой системой на компьютере, делать запросы в интернете и пользоваться поисковиком Google.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Что немаловажно: работает в России.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://developers.google.com/gemini-code-assist/docs/overview?hl=ru&#34;&gt;Обзорная статья от Google&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google-gemini/gemini-cli&#34;&gt;Репозиторий на GitHub&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/google-gemini/gemini-cli/blob/main/docs/cli/commands.md&#34;&gt;Документация по командам и настройкам&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;установка&#34;&gt;Установка&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install -g @google/gemini-cli&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;подготовка-к-запуску&#34;&gt;Подготовка к запуску&lt;/h2&gt;&#xA;&lt;p&gt;Чтобы использовать агента бесплатно, есть несколько путей. Опишу использование варианта с аккаунтом в Google.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Использование цикла в PostgreSQL с выводом в консоль</title>
      <link>/posts/postgres-do-loop-notice/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0300</pubDate>
      <guid>/posts/postgres-do-loop-notice/</guid>
      <description>&lt;p&gt;Небольшая заметка на полях на будущее. Иногда в PostgreSQL нужно выполнить ряд повторяющихся действий с выводом результатов в лог.&#xA;Одним примером покажу, как это сделать легко и просто.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;-- Делаем вывод сообщений в лог видимым&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;client_min_messages&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;notice&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;TEMP&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;tmp&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;SERIAL&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;TEXT&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;-- Анонимный блок DO&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#859900&#34;&gt;DO&lt;/span&gt; $$&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;BEGIN&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;-- Цикл LOOP&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#268bd2&#34;&gt;LOOP&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;tmp&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;name&lt;/span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;VALUES&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;gen_random_uuid&lt;/span&gt;()::&lt;span style=&#34;color:#cb4b16&#34;&gt;TEXT&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;-- Условный оператор IF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#93a1a1;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;IF&lt;/span&gt; (&lt;span style=&#34;color:#859900&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;MAX&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;id&lt;/span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;tmp&lt;/span&gt;) &amp;gt; &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;THEN&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#268bd2&#34;&gt;RAISE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;NOTICE&lt;/span&gt; &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;max id == %&amp;#39;&lt;/span&gt;, (&lt;span style=&#34;color:#859900&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;COUNT&lt;/span&gt;(*) &lt;span style=&#34;color:#859900&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;tmp&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#268bd2&#34;&gt;EXIT&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;IF&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#859900&#34;&gt;END&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;LOOP&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;END&lt;/span&gt; $$;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Intellij IDEA - сброс триального периода</title>
      <link>/posts/idea-trial/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0300</pubDate>
      <guid>/posts/idea-trial/</guid>
      <description>&lt;p&gt;Аж в 2016 году я тут писал о том, &lt;a href=&#34;https://dstarod.github.io/posts/remove-idea-completely/&#34;&gt;как удалить Idea полностью&lt;/a&gt;, чтобы начать все с начала.&#xA;Но времена меняются, и что работало раньше - не работает сейчас. Вот обновленный алгоритм для MacOS. Обратите внимание на версию Idea.&lt;/p&gt;&#xA;&lt;p&gt;Удаляем файлы и каталоги:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cb4b16&#34;&gt;cd&lt;/span&gt; ~/Library/Preferences&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls | grep &lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#39;jetbrains&amp;#39;&lt;/span&gt; | xargs rm&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm IntelliJIdea2019.1/eval/*.key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm IntelliJIdea2019.1/options/other.xml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Теперь надо удалить записи из одного файла plist, который хранится в закодированном виде. Придется его для начала сконвертировать в текст а потом обратно:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Создание валидной цепочки SSL сертификатов</title>
      <link>/posts/fake-ssl-cert-chain/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0300</pubDate>
      <guid>/posts/fake-ssl-cert-chain/</guid>
      <description>&lt;p&gt;Для написания тестов на валидность загружаемых сертификатов мне потребовалось создать несколько вариантов&#xA;цепочек и приватных ключей. Прошерстив некоторый объем интернета, я собрал всю необходимую информацию о том,&#xA;как локально сгенерировать корректную цепочку SSL сертификатов, которая будет проходить проверку стандартными&#xA;средствами.&lt;/p&gt;&#xA;&lt;p&gt;Чтобы не писать кучу команд всякий раз, напишем bash-скрипт. Для начала, зададим несколько настроечных констант:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;CSR_FILE&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;csrfile.csr&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;KEY_BITS&lt;/span&gt;=&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2048&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;CONF_DIR&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;conf&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#268bd2&#34;&gt;CHAIN_CRT&lt;/span&gt;=&lt;span style=&#34;color:#2aa198&#34;&gt;&amp;#34;ca_chain.crt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Затем пара функций для подготовки и последующей подчистки каталога с настройками:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Удобные команды и алиасы для GIT</title>
      <link>/posts/git-tricks-and-aliases-with-fish/</link>
      <pubDate>Thu, 27 Jul 2017 00:00:00 +0300</pubDate>
      <guid>/posts/git-tricks-and-aliases-with-fish/</guid>
      <description>&lt;p&gt;Несколько удобных алиасов для git, чтобы не потерять, положу это здесь.&#xA;Я использую оболочку &lt;a href=&#34;https://fishshell.com/&#34;&gt;fish&lt;/a&gt;, поэтому возможно какие-то команды потребуется адаптировать для вашей.&#xA;Шикарный набор советов &lt;a href=&#34;https://github.com/git-tips/tips&#34;&gt;здесь&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Лог в виде дерева:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; gl&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git log --oneline --decorate --graph --all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Интерактивный rebase с указанного в аргументах коммита:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; gri&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git rebase -i &lt;span style=&#34;color:#268bd2&#34;&gt;$argv&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Перезапись локальной ветки свежей веткой с origin:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;function&lt;/span&gt; grho&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git fetch origin (gb)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    git reset --hard FETCH_HEAD&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Имя текущей ветки:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Плагин для Sublime Text своими руками</title>
      <link>/posts/sublime-plugin-dict-to-json/</link>
      <pubDate>Thu, 13 Apr 2017 00:00:00 +0300</pubDate>
      <guid>/posts/sublime-plugin-dict-to-json/</guid>
      <description>&lt;p&gt;Не секрет, что одним из самых популярных редакторов кода у разработчиков на сегодняшний день&#xA;является &lt;a href=&#34;https://www.sublimetext.com/&#34;&gt;Sublime Text&lt;/a&gt;. Кроме своих индивидуальных киллер-фич,&#xA;которые вскоре стали копировать разработчики других продуктов той-же ниши&#xA;(например, мультиредактирование), он хорош своей расширяемостью плагинами, коих великое множество на любой вкус. Думаю, не последней причиной такого их количества является простота создания. Для примера возьмем и напишем полезный инструмент, который будет брать как попало отформатированный Python-словарь и выдавать JSON стройными рядами.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Как остановить зависшую транзакцию в PostgreSQL</title>
      <link>/posts/terminate-transaction-lock-postgres/</link>
      <pubDate>Mon, 09 Jan 2017 00:00:00 +0300</pubDate>
      <guid>/posts/terminate-transaction-lock-postgres/</guid>
      <description>&lt;p&gt;Сегодня PostgreSQL является одной из самых популярных СУБД, и, судя по новостям, многие крупные конторы переходят на ее использование&#xA;с коммерческих продуктов признанных лидеров софтверного фронта. Поэтому думаю, что пошаговое решение ситуации с остановкой зависшей&#xA;транзакции будет полезно многим. Я столкнулся с таковой, применяя транзакцию, создающую внешний ключ к заблокированной таблице.&lt;/p&gt;&#xA;&lt;p&gt;Итак, что нам нужно сделать:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Найти ID заблокированной таблицы;&lt;/li&gt;&#xA;&lt;li&gt;Найти ID транзакции, которая зависла;&lt;/li&gt;&#xA;&lt;li&gt;Попытаться остановить её корректно, прервать в случае оказания сопротивления.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Допустим, запрос заблокировал таблицу &amp;ldquo;mytable&amp;rdquo;. Получим её ID:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Полное удаление Intellij IDEA или Вечный Триал</title>
      <link>/posts/remove-idea-completely/</link>
      <pubDate>Wed, 21 Sep 2016 00:00:00 +0300</pubDate>
      <guid>/posts/remove-idea-completely/</guid>
      <description>&lt;p&gt;Одна из самых шикарных IDE для full-stack разработки - Intellij IDEA. Community версия бесплатна, и для разработки на Java/Android ее хватит за глаза.&#xA;А если приходится писать на Python, PL/SQL, Groovy, JavaScript, и еще горсточке языков? Тут только Professional вариант, вот только он стоит денег, хоть он того и стоит.&#xA;Конечно, для начала вам предлагается пробный период на месяц, в течении которого можно успеть по достоинству оценить эту IDE.&#xA;Но что, если пробный период закончился, а денег на приобретение все еще нет?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python и пляски с процессами</title>
      <link>/posts/python-grandchilds/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0300</pubDate>
      <guid>/posts/python-grandchilds/</guid>
      <description>&lt;p&gt;Про использование нескольких процессов в Python уже написано невообразимое множество статей, хороших и не очень;&#xA;сломано немало копий в обсуждении проблемы GIL и псевдопотоков. Я же просто хочу рассказать о том, как решалась&#xA;задача с управлением небольшого дерева дочерних процессов.&lt;/p&gt;&#xA;&lt;p&gt;Итак, исходная ситуация. Основной процесс запускает два дочерних, используя &lt;code&gt;multiprocessing.Process&lt;/code&gt;, передает туда&#xA;очередь &lt;code&gt;multiprocessing.Queue&lt;/code&gt;. Первый дочерний процесс просто собирает какие-то данные и пишет в очередь,&#xA;второй же запускает еще несколько процессов, куда передает ту-же очередь, с которой они и работают.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python NLTK &#43; Stanford NLP</title>
      <link>/posts/python-nltk-stanford-nlp/</link>
      <pubDate>Fri, 29 Jan 2016 00:00:00 +0300</pubDate>
      <guid>/posts/python-nltk-stanford-nlp/</guid>
      <description>&lt;p&gt;Как известно, в Python стандартом работы с натуральным языком де-факто является NLTK. Несмотря на это, я довольно долго использовал Pattern от CLiPS из-за его простоты и скорости (многие отмечают тормознутость NLTK).&lt;/p&gt;&#xA;&lt;p&gt;Но наступил момент, когда почти вся кодовая база была успешно портирована на Python 3.5, а разработчики Pattern так и не сделали версию с поддержкой третьей версии. И, судя по всему, не собираются.&lt;/p&gt;&#xA;&lt;p&gt;Что-ж, будем использовать NLTK. От него мне нужны: токенизация, выделение POS (part-of-speech), получение N-grams и классификация твитов на группы с использованием Naive Bayes. Все это дело на Python 3.5.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postgres: generate the most large followers intersections</title>
      <link>/posts/postgres-generate-most-large-followers/</link>
      <pubDate>Tue, 19 Jan 2016 00:00:00 +0300</pubDate>
      <guid>/posts/postgres-generate-most-large-followers/</guid>
      <description>&lt;p&gt;Задача: получить список пользователей твиттера, с которыми у одного из них есть общие фоловеры, и отсортировать по их количеству. Лучше всего продемонстрировать на примере. Создадим таблицу с идентификаторами пользователей и фоловеров:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;TEMP&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;uid&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;INT&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;fid&lt;/span&gt; &lt;span style=&#34;color:#cb4b16&#34;&gt;INT&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;f&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;uid&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;fid&lt;/span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;VALUES&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;11&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;12&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;13&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;14&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;11&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;12&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;13&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;14&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;13&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;14&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;10&lt;/span&gt;), (&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;11&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;А вот собственно и запрос, интересуют пересечения с пользователем 2, самые большие сверху.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;uid&lt;/span&gt;, &lt;span style=&#34;color:#268bd2&#34;&gt;array_agg&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;fid&lt;/span&gt;) &lt;span style=&#34;color:#268bd2&#34;&gt;followers_intersect&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;uid&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#859900&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;cardinality&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;array_agg&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;a1&lt;/span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;unnest&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;array_agg&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;fid&lt;/span&gt;)) &lt;span style=&#34;color:#268bd2&#34;&gt;a1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;JOIN&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;unnest&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#859900&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;array_agg&lt;/span&gt;(&lt;span style=&#34;color:#268bd2&#34;&gt;fid&lt;/span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;f&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;uid&lt;/span&gt;=&lt;span style=&#34;color:#2aa198;font-weight:bold&#34;&gt;2&lt;/span&gt;)::&lt;span style=&#34;color:#cb4b16&#34;&gt;INT&lt;/span&gt;[]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ) &lt;span style=&#34;color:#268bd2&#34;&gt;a2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#859900&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;a1&lt;/span&gt;=&lt;span style=&#34;color:#268bd2&#34;&gt;a2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )::&lt;span style=&#34;color:#cb4b16&#34;&gt;INT&lt;/span&gt;[]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#859900&#34;&gt;DESC&lt;/span&gt; &lt;span style=&#34;color:#268bd2&#34;&gt;NULLS&lt;/span&gt; &lt;span style=&#34;color:#859900&#34;&gt;LAST&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Результат, как и ожидалось:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
